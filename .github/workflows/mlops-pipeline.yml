name: MLOps Multi-Stage Pipeline

on:
  push:
    branches:
      - main

jobs:

  data-processing:
    name: Data Processing & Cleaning
    runs-on: ubuntu-latest
    outputs:
      processed_data_path: processed_titanic.csv

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    - name: Install dependencies
      run: pip install pandas

    - name: Run data processing
      run: |
        python app/data_processing.py
      # The data_processing.py writes processed_titanic.csv
    - name: Upload processed data as artifact
      uses: actions/upload-artifact@v3
      with:
        name: processed-data
        path: app/processed_titanic.csv

  model-training:
    name: Model Training
    runs-on: ubuntu-latest
    needs: data-processing
    outputs:
      model_path: titanic_model.joblib

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download processed data
      uses: actions/download-artifact@v3
      with:
        name: processed-data
        path: app/

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    - name: Install dependencies
      run: pip install pandas scikit-learn joblib

    - name: Run model training
      run: python app/model_training.py

    - name: Upload model artifact
      uses: actions/upload-artifact@v3
      with:
        name: model-artifact
        path: app/titanic_model.joblib

  docker-build-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: model-training

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download model artifact
      uses: actions/download-artifact@v3
      with:
        name: model-artifact
        path: app/

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build training Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/titanic-train:latest -f app/Dockerfile.train .

    - name: Push training image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/titanic-train:latest

    - name: Build serving Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/titanic-serve:latest -f app/Dockerfile.serve .

    - name: Push serving image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/titanic-serve:latest

  serve-and-test:
    name: Serve and Test Model API
    runs-on: ubuntu-latest
    needs: docker-build-push
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

    services:
      model-service:
        image: ${{ env.DOCKER_USERNAME }}/titanic-serve:latest
        ports:
          - 8000:8000
        options: >-
          --health-cmd "curl --fail http://localhost:8000/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Wait for service health
      run: |
        timeout 60 bash -c 'until curl --silent --fail http://localhost:8000/health; do sleep 5; done'

    - name: Test prediction API
      run: |
        curl -X POST http://localhost:8000/predict \
          -H "Content-Type: application/json" \
          -d '{"Pclass":3,"Sex":0,"Age":22,"SibSp":1,"Parch":0,"Fare":7.25,"Embarked_Q":0,"Embarked_S":1}'
